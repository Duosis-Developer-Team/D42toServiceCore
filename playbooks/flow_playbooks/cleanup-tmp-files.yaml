---
- name: Webhook ile gelen alert'e göre belirtilen dizindeki dosyaları temizle
  hosts: localhost
  gather_facts: false
  vars:
    # Silinecek dizin yolu - AWX'den değiştirilebilir
    target_directory: "{{ target_directory | default('/test') }}"
  tasks:
    - name: Tüm gelen değişkenleri debug et
      debug:
        msg: 
          - "=== WEBHOOK PAYLOAD DEBUG ==="
          - "Event Name: {{ event_name | default('TANIMSIZ') }}"
          - "Event ID: {{ event_id | default('TANIMSIZ') }}"
          - "Host Name: {{ host_name | default('TANIMSIZ') }}"
          - "Host IP: {{ host_ip | default('TANIMSIZ') }}"
          - "Target Directory: {{ target_directory | default('TANIMSIZ') }}"
          - "=== PAYLOAD SONU ==="

    - name: Webhook payload'ını debug et
      debug:
        msg: 
          - "Event: {{ event_name | default('Bilinmiyor') }}"
          - "Event ID: {{ event_id | default('Bilinmiyor') }}"
          - "Host: {{ host_name | default('Bilinmiyor') }}"
          - "IP: {{ host_ip | default('Bilinmiyor') }}"
          - "Hedef Dizin: {{ target_directory }}"

    - name: Host'un variable'larını al
      set_fact:
        target_host: "{{ host_name }}"
        server_ip: "{{ host_ip }}"
        server_username: "duosis"
        server_password: "Qwerasdf1234"
        ssh_port: "{{ ssh_port | default(22) }}"

    - name: Hedef sunucuya bağlantıyı test et
      ping:
      delegate_to: "{{ target_host }}"
      vars:
        ansible_host: "{{ server_ip }}"
        ansible_user: "{{ server_username }}"
        ansible_password: "{{ server_password }}"
        ansible_port: "{{ ssh_port }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=30'

    - name: Hedef sunucuya bağlan ve belirtilen dizindeki dosyaları temizle
      block:
        - name: Hedef dizinin varlığını kontrol et
          stat:
            path: "{{ target_directory }}"
          register: dir_stat

        - name: Hedef dizindeki tüm dosya ve dizinleri sil (rm -rf)
          command: rm -rf "{{ target_directory }}"
          when: dir_stat.stat.exists and dir_stat.stat.isdir

        - name: Temizlik sonrası hedef dizini kontrol et
          command: ls -la "{{ target_directory }}"
          register: cleanup_result
          when: dir_stat.stat.exists and dir_stat.stat.isdir

        - name: Temizlik sonucunu raporla
          debug:
            msg: 
              - "Temizlik tamamlandı!"
              - "Hedef dizin: {{ target_directory }}"
              - "Kalan dosyalar: {{ cleanup_result.stdout_lines | default('Dizin bulunamadı') }}"

      delegate_to: "{{ target_host }}"
      become: yes
      become_user: root
      vars:
        ansible_host: "{{ server_ip }}"
        ansible_user: "{{ server_username }}"
        ansible_password: "{{ server_password }}"
        ansible_port: "{{ ssh_port }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ConnectTimeout=30' 