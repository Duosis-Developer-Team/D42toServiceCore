# send-to-smax.yaml
---
- name: Device42 cihazlarını SMAX'e insert et
  hosts: localhost
  gather_facts: false

  vars:
    smax_token_url: "https://destek.kafein.com.tr/auth/authentication-endpoint/authenticate/token?TENANTID=669866050"
    smax_user: "duosis.admin"
    smax_pass: "duosisITSM.25"
    smax_api_url: "https://destek.kafein.com.tr/rest/669866050/ems/bulk"
    chunk_size: 1

  tasks:
    - name: Device42 cihazlarını dosyadan oku
      slurp:
        src: "./device42_devices.json"
      register: devices_file

    - name: JSON'u parse et
      set_fact:
        devices: "{{ devices_file.content | b64decode | from_json }}"

    - name: Cihazları chunk'lara ayır
      set_fact:
        device_chunks: "{{ devices | batch(chunk_size, []) }}"

    - name: SMAX token al
      uri:
        url: "{{ smax_token_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body: "{{ { 'Login': smax_user, 'Password': smax_pass } | to_json }}"
        return_content: yes
        status_code: 200
        validate_certs: no
      register: smax_token_response

    - name: Token'ı ayıkla
      set_fact:
        smax_token: "{{ (smax_token_response.content | from_json).token }}"

    - name: Her chunk'ı SMAX'e gönder
      vars:
        smax_payload: |
          {
            "entities": [
              {% for device in item %}
              {
                "entity_type": "Device",
                "properties": {
                  "HostName": "{{ device.name | default('') }}",
                  "MemorySize": {{ device.ram | default(0) }},
                  "AssetTag": "{{ device.asset_no | default('') }}",
                  "Cpus": "{{ {'Cpu':[{
                    'CpuType':'',
                    'CpuVendor':'',
                    'CpuClockSpeed': (device.cpuspeed|default(''))|string,
                    'CpuId':'',
                    'CpuCoreNumber': (device.cpucore|default(device.cpucount|default(0)))|string
                  }]} | to_json }}",
                  "IpAddresses": "{{ {'IpAddress':[{'IpValue': (device.ip_addresses[0].ip if device.ip_addresses|length > 0 else ''),'IpType':'','AuthoritativeDNSName':'','RoutingDomain':'','GlobalId':'','Keep':'','Id':''}]} | to_json }}",
                  "SerialNo": "{{ device.serial_no | default('') }}",
                  "OSName": "{{ device.os | default('') }}",
                  "OSVersion": "{{ device.osver | default('') }}",
                  "Category": "{{ device.category | default('') }}"
                }
              }{% if not loop.last %},{% endif %}
              {% endfor %}
            ],
            "operation": "CREATE"
          }
      uri:
        url: "{{ smax_api_url }}"
        method: POST
        headers:
          Cookie: "SMAX_AUTH_TOKEN={{ smax_token }}"
          Content-Type: "application/json"
        body: "{{ smax_payload }}"
        status_code: 200,201,202
        validate_certs: no
      loop: "{{ device_chunks }}"
      loop_control:
        index_var: idx
        label: "chunk_{{ idx }}"
      register: smax_responses

    - name: SMAX yanıtlarını göster
      debug:
        var: item
      loop: "{{ smax_responses.results }}"
      loop_control:
        index_var: rsp_idx
        label: "response_{{ rsp_idx }}"
